<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>variables on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/variables/</link>
    <description>Recent content in variables on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Wed, 06 Sep 2023 10:57:39 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/variables/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>在JavaScript中创建静态变量</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8javascript%E4%B8%AD%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F/</link>
      <pubDate>Wed, 06 Sep 2023 10:57:39 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8javascript%E4%B8%AD%E5%88%9B%E5%BB%BA%E9%9D%99%E6%80%81%E5%8F%98%E9%87%8F/</guid>
      <description>
        
          
            摘要 本教程将介绍如何在JavaScript中创建静态变量。静态变量是与类相关联而不是与类的实例相关联的变量。本教程将提供多种方法来创建和访问静态变量。
内容 使用类属性和原型链 在JavaScript中，可以通过在类函数对象上定义属性来实现静态变量。这样的属性不会与实例相关联，而是与类对象本身相关联。
示例代码 1function MyClass() { 2 // 实例变量 3 this.instanceVar = &amp;#34;instance variable&amp;#34;; 4} 5 6// 静态变量 7MyClass.staticVar = &amp;#34;static variable&amp;#34;; 8 9// 实例方法 10MyClass.prototype 
          
          
        
      </description>
    </item>
    
    <item>
      <title>如何检查变量的类型是否为字符串</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%A3%80%E6%9F%A5%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Tue, 05 Sep 2023 22:04:00 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%A3%80%E6%9F%A5%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%98%AF%E5%90%A6%E4%B8%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>
        
          
            摘要 本教程将介绍如何在Python中检查变量的类型是否为字符串。
内容 在Python中，我们可以使用多种方法来检查变量的类型是否为字符串。下面是一些常见的方法。
使用type函数 我们可以使用type函数来判断变量的类型是否为字符串。
1my_str = &amp;#34;hello&amp;#34; 2my_int = 7 3 4print(type(my_str) is str) # True 5print(type(my_int) is str) # False 以上代码通过使用type函数来判断变量的类型，然后将结果与str类型进行比较，从而判断变量的类型是否为字符串。
使用isinstance函数 我们也可以使用isinstance函数来判断变量的类型是否为字符串。
1my_str = &amp;#34;hello&amp;#34; 2my_int = 7 3 4print(isinstance(my_str, str)) # True 5print(isinstance(my_int, str)) # False 以上代码使用isinstance函数来判断变量的类型是否为字符串。isinstance函数会检查变量的类型是否与指定类型匹配，如果匹配则返回True，否则返回False。
总结 通过使用type函数或isinstance函数，我们可以轻松地检查变量的类型是否为字符串。type函数可以直接判断变量的类型，而isinstance函数可以同时检查变量是否为指定类型或其子类。根据具体需求，选择合适的方法来检查变量的类型是否为字符串。
          
          
        
      </description>
    </item>
    
    <item>
      <title>MySQL中 @variable 和 variable 有什么区别？</title>
      <link>https://www.techdocdb.com/posts/mysql%E4%B8%AD-@variable-%E5%92%8C-variable-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 25 Aug 2023 08:49:31 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/mysql%E4%B8%AD-@variable-%E5%92%8C-variable-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
      <description>
        
          
            摘要 本教程将介绍MySQL中 @variable 和 variable 之间的区别。我们将提供示例代码来说明这个问题。
内容 在MySQL中，@variable 表示一个用户定义的变量，你可以自定义变量名称。它们是松散类型的变量，在会话中可以初始化并保留其值，直到会话结束为止。
@variable 变量的前面带有 @ 符号，如 @var。你可以使用 SET 语句或在查询中初始化这个变量：
1SET @var = 1; 2 3SELECT @var2 := 2; 当你在MySQL中开发存储过程时，可以传递输入参数并声明局部变量：
1DELIMITER // 2 3CREATE PROCEDURE prc_test (var INT) 4BEGIN 5 DECLARE var2 INT; 6 SET var2 = 1; 7 SELECT var2; 8END; 9// 10 11DELIMITER ; 这些变量不需要任何前缀，并且仅在存储过程被调用时重新初始化，而会话特定的用户定义变量不会重新初始化。
总结 通过执行上述代码，你可以在MySQL中使用 @variable 和 variable 两种变量。@variable 是会话特定的用户定义变量，variable 是存储过程变量。它们在作用域和用途上有所不同。选择适合你需求的变量类型来进行 MySQL 编程，以提高代码的可读性和灵活性。
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

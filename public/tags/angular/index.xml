<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>angular on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/angular/</link>
    <description>Recent content in angular on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sat, 09 Sep 2023 11:52:32 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/angular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular2 Routing教程</title>
      <link>https://www.techdocdb.com/posts/angular2-routing%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 09 Sep 2023 11:52:32 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/angular2-routing%E6%95%99%E7%A8%8B/</guid>
      <description>
        
          
            摘要 在Angular应用程序中，如何确定当前活动的路由？
内容 在Angular应用程序中，我们经常需要知道当前活动的路由，以便在导航链接或按钮上添加活动状态的类。在不同版本的Angular中，有多种方法可以实现这一目标。本教程将介绍一些常用的方法。
标记导航链接为活动状态 在Angular中,我们可以使用[routerLinkActive]指令来将导航链接标记为活动状态。通过给[routerLinkActive]指令添加一个用于活动状态的CSS类名，当链接的路由与当前路由匹配时，该类名将被添加到链接上。
下面是一个带有活动状态的导航链接的示例：
1- &amp;lt;a [routerLink]=&amp;#34;[&amp;#39;/home&amp;#39;]&amp;#34; [routerLinkActive]=&amp;#34;[&amp;#39;is-active&amp;#39;]&amp;#34;&amp;gt;Home&amp;lt;/a&amp;gt; 或者，如果只需要一个类，可以简化为：
1- &amp;lt;a [routerLink]=&amp;#34;[&amp;#39;/home&amp;#39;]&amp;#34; [routerLinkActive]=&amp;#34;&amp;#39;is-active&amp;#39;&amp;#34;&amp;gt;Home&amp;lt;/a&amp;gt; 或者，如果只需要一个类，还可以进一步简化为：
1- &amp;lt;a [routerLink]=&amp;#34;[&amp;#39;/home&amp;#39;]&amp;#34; routerLinkActive=&amp;#34;is-active&amp;#34;&amp;gt;Home&amp;lt;/a&amp;gt; 有关更多信息，请参见routerLinkActive指令的文档。
通过注入Location对象来检测当前路由 在Angular中，我们还可以通过注入Location对象来检测当前路由。Location对象提供了一种方便的方式，通过调用path()方法获取当前路由的路径。
下面是使用Location对象检测当前活动路由的示例：
1import { Location } from &amp;#39;@angular/common&amp;#39;; 2 3class MyController { 4 constructor(private location: Location) {} 5 6 // 获取当前路径 7 getCurrentRoute() { 8 return this.location.path(); 9 } 10} 请确保首先导入Location对象：
1import { Location } from &amp;#39;@angular/common&amp;#39;; 注意，无论使用哪种LocationStrategy，Location类都会返回一个规范化的路径，而不会返回具体的路径片段。
参考答案 以下是一些不同版本的Angular中确定活动路由的参考答案：
1- With the new Angular router, you can add a `[routerLinkActive]=&amp;#34;[&amp;#39;your-class-name&amp;#39;]&amp;#34;` attribute to all your links.
          
          
        
      </description>
    </item>
    
    <item>
      <title>在 Angular 中手动触发变更检测</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8-angular-%E4%B8%AD%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91%E5%8F%98%E6%9B%B4%E6%A3%80%E6%B5%8B/</link>
      <pubDate>Mon, 04 Sep 2023 04:53:14 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8-angular-%E4%B8%AD%E6%89%8B%E5%8A%A8%E8%A7%A6%E5%8F%91%E5%8F%98%E6%9B%B4%E6%A3%80%E6%B5%8B/</guid>
      <description>
        
          
            摘要 本教程介绍了在 Angular 中如何手动触发变更检测。我们将探讨一些方法并提供相应的代码示例来解决在没有浏览器事件的情况下，模板绑定无法更新的问题。
内容 在 Angular 中，有几种方法可以手动触发变更检测。以下是一些常用的方法：
使用 ApplicationRef.tick() 方法来手动触发变更检测。类似于 AngularJS 的 $rootScope.$digest() 方法，这个方法会检查整个组件树。示例代码如下： 1constructor(private appRef: ApplicationRef) {} 2 3// 手动触发变更检测 4this.appRef.tick(); 使用 NgZone.run() 方法来在 Angular 区域内执行回调函数。类似于 AngularJS 的 $rootScope.$apply(callback) 方法，这个方法会在 Angular 区域内评估回调函数，并在执行完回调函数后检查整个组件树。示例代码如下： 1constructor(private ngZone: NgZone) {} 2 3// 手动触发变更检测 4this.ngZone.run(() =&amp;gt; { 5 // 执行需要在 Angular 区域内完成的操作 6}); 使用 ChangeDetectorRef.detectChanges() 方法来手动触发变更检测。类似于 AngularJS 的 $scope.$digest() 方法，这个方法只会检查当前组件及其子组件。示例代码如下： 1constructor(private changeDetectorRef: ChangeDetectorRef) {} 2 3// 手动触发变更检测 4this.changeDetectorRef.detectChanges(); 你可以将 ApplicationRef、NgZone 或 ChangeDetectorRef 注入到你的组件中，然后在需要手动触发变更检测的地方调用相应的方法。
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regex on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/regex/</link>
    <description>Recent content in regex on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Mon, 04 Sep 2023 04:34:51 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用字符串格式化显示带两位小数或整数的数字</title>
      <link>https://www.techdocdb.com/posts/%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%98%BE%E7%A4%BA%E5%B8%A6%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0%E6%88%96%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Mon, 04 Sep 2023 04:34:51 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E4%BD%BF%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%98%BE%E7%A4%BA%E5%B8%A6%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0%E6%88%96%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>
        
          
            摘要 本文将解释如何使用字符串格式化来显示带两位小数或整数的数字。将提供相关示例代码以阐明知识点。
内容 在开发中，当需要显示价格字段时，有时价格可以是100、100.99或100.9等不同形式。我们希望在价格输入小数时仅显示两位小数，例如100应显示为100，而100.2应显示为100.20，100.22应保持不变。
这里是一些实现这个需求的示例代码，使用了简单的字符串格式化：
1var price1 = 100; 2var formattedPrice1 = String.Format(&amp;#34;{0:#,##0}&amp;#34;, price1); // 输出：100 3 4var price2 = 100.2; 5var formattedPrice2 = String.Format(&amp;#34;{0:#,##0.00}&amp;#34;, price2); // 输出：100.20 6 7var price3 = 100.22; 8var formattedPrice3 = String.Format(&amp;#34;{0:#,##0.00}&amp;#34;, price3); // 输出：100.22 在上述代码中，我们使用了 {0:#,##0} 的格式化方式来满足需求。对于整数，我们简单地使用 {0:#,##0} 来格式化为整数形式，不显示小数位。对于带小数的数字，我们使用 {0:#,##0.00} 来格式化为两位小数形式。
总结 通过使用字符串格式化，我们可以轻松地实现将数字格式化为带两位小数或整数的形式。通过简单的字符串格式化，我们可以满足不同显示需求的要求，并将数字以符合预期的方式呈现给用户。
参考链接：无
          
          
        
      </description>
    </item>
    
    <item>
      <title>在正则表达式中如何取非特定词？</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%AD%E5%A6%82%E4%BD%95%E5%8F%96%E9%9D%9E%E7%89%B9%E5%AE%9A%E8%AF%8D/</link>
      <pubDate>Sun, 03 Sep 2023 21:37:08 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%AD%E5%A6%82%E4%BD%95%E5%8F%96%E9%9D%9E%E7%89%B9%E5%AE%9A%E8%AF%8D/</guid>
      <description>
        
          
            摘要 本教程将介绍在正则表达式中如何取非特定词，即匹配除特定词之外的内容。我们将讨论在正则表达式中使用否定预查来实现这一操作，并提供几个示例来说明如何使用。
内容 在正则表达式中，可以使用否定预查来取非特定词。否定预查是一种特殊的模式，它允许我们在正则表达式中指定一个条件，用于匹配不符合该条件的内容。
以下是几种常见的取非特定词的方法：
使用否定预查： ^(?!.*word).*：这个正则表达式使用否定预查 (?!.*word) 来匹配不包含特定词的任何内容。例如，如果我们要取非单词&amp;quot;bar&amp;quot;，我们可以使用 ^(?!.*bar).*$。 使用基本规则： ^(?:[^b]+|b(?:$|[^a]|a(?:$|[^r])))*$：这个正则表达式使用基本规则来匹配不包含特定词的任何内容。它会扫描输入字符串并排除包含&amp;quot;bar&amp;quot;的部分。 使用语言内置方法： 有些编程语言（如Python）提供了字符串切割方法，可以根据特定词将字符串分割成多个部分。我们可以使用这种方法，并跳过包含特定词的部分。 无论采用哪种方法，我们需要根据具体需求和编程环境选择适合的方式。在处理正则表达式时，我们应根据可读性、理解性和易于维护性来选择解决方案。
总结： 在正则表达式中，取非特定词可以使用否定预查或基本规则来实现。否定预查可以在正则表达式中指定一个条件，用于匹配不符合该条件的内容。基本规则则是通过排除包含特定词的部分来匹配不包含特定词的内容。根据个人需求和编程环境选择合适的方法，并确保代码的可读性和易于维护性。
参考链接：
正则表达式指南 正则表达式否定预查 
          
          
        
      </description>
    </item>
    
    <item>
      <title>如何使用正则表达式匹配DNS主机名或IP地址</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8Ddns%E4%B8%BB%E6%9C%BA%E5%90%8D%E6%88%96ip%E5%9C%B0%E5%9D%80/</link>
      <pubDate>Fri, 01 Sep 2023 08:11:43 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8Ddns%E4%B8%BB%E6%9C%BA%E5%90%8D%E6%88%96ip%E5%9C%B0%E5%9D%80/</guid>
      <description>
        
          
            摘要 本教程将介绍如何使用正则表达式匹配合法的DNS主机名或IP地址。我们将提供多种方法来实现这个操作，并提供相应的示例代码。
内容 在正则表达式中，匹配合法的DNS主机名或IP地址是一项常见的需求。以下是几种不同的方法来实现这个操作。
方法一：匹配合法的IP地址 你可以使用以下正则表达式来匹配合法的IP地址：
1(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3} 这个正则表达式可以确保匹配有效的IP地址。
方法二：匹配合法的DNS主机名 你可以使用以下正则表达式来匹配合法的DNS主机名：
1^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$ 这个正则表达式可以确保匹配有效的DNS主机名。
根据实际需求，你可以选择使用IP地址匹配的正则表达式、DNS主机名匹配的正则表达式，或者将它们联合起来形成一个匹配的正则表达式。
总结 本教程介绍了如何使用正则表达式匹配合法的DNS主机名或IP地址。根据实际需求，你可以选择适用于IP地址或DNS主机名的正则表达式。通过了解正则表达式的基本用法，我们可以轻松地匹配合法的DNS主机名或IP地址。
          
          
        
      </description>
    </item>
    
    <item>
      <title>在Sublime Text 2中进行正则表达式搜索替换</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8sublime-text-2%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%90%9C%E7%B4%A2%E6%9B%BF%E6%8D%A2/</link>
      <pubDate>Tue, 29 Aug 2023 06:27:32 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8sublime-text-2%E4%B8%AD%E8%BF%9B%E8%A1%8C%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%90%9C%E7%B4%A2%E6%9B%BF%E6%8D%A2/</guid>
      <description>
        
          
            摘要 本教程将解释在Sublime Text 2中如何使用正则表达式进行搜索替换。我们将使用具体示例说明如何在匹配组上执行替换。
内容 在Sublime Text 2中，您可以使用正则表达式进行搜索替换。下面是一些使用示例：
使用括号指定匹配组：在您的搜索表达式中使用括号来指定匹配组。例如，要将文本： 1Hello my name is bob 使用以下搜索表达式进行替换：
1Find what: my name is (\w)+ 2Replace with: my name used to be $1 确保正确匹配整个名称而不仅仅是字母。搜索表达式应为：
1my name is (\w+) 替换匹配组：要在替换字符串中使用匹配组的内容，使用以下语法： 1$1 或
1\1 这将替换为匹配组的内容。
请注意，正确设置搜索条件和正确使用匹配组非常重要。
总结 在Sublime Text 2中，您可以使用正则表达式进行搜索替换。通过使用括号来指定匹配组，并在替换字符串中使用$1或\1来引用匹配组的内容，您可以使用正则表达式轻松进行高级搜索替换操作。
相关链接 Sublime Text官方文档 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

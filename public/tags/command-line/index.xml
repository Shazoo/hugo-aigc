<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>command-line on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/command-line/</link>
    <description>Recent content in command-line on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Fri, 08 Sep 2023 14:42:46 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/command-line/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何从命令行重新加载.bash_profile</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E4%BB%8E%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD.bash_profile/</link>
      <pubDate>Fri, 08 Sep 2023 14:42:46 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E4%BB%8E%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%87%8D%E6%96%B0%E5%8A%A0%E8%BD%BD.bash_profile/</guid>
      <description>
        
          
            摘要 本教程将向您展示如何从命令行重新加载.bash_profile文件，以便立即应用更改。通过以下几种方法，您可以避免退出并重新登录来使更改生效，并在需要时按需执行重新加载。本教程的示例将提供具体的命令和步骤，以便您轻松理解和操作。
内容 无需退出登录，您只需在命令行中执行以下命令即可重新加载.bash_profile文件：
1source ~/.bash_profile 或者，如果您想要键入更少的字符，您可以使用以下命令：
1. ~/.bash_profile 只需确保您的.bash_profile文件中没有依赖于当前状态的内容。这些命令将使您的终端立即加载最新的.bash_profile文件。
您还可以使用以下命令重新加载特定用户的.bash_profile文件：
1su - username 请注意，在执行这些命令之前，请将.bash_profile文件保存好，并通过cd命令进入用户的主目录。然后，使用. .bash_profile命令重新加载文件。
实际上，如果您希望终端每次启动时自动运行.bash_profile文件而不是每次打开终端时手动运行它，您可以将. ~/.bash_profile添加到~/.bashrc文件中。
请注意，当您打开终端时，终端会以（非登录）交互模式启动bash，这意味着它将加载.bashrc文件。.bash_profile仅在bash以交互登录模式启动时加载。通常，这仅在您通过终端登录（Ctrl+Alt+F1..F6），或通过ssh连接时才会发生。
如果您想要为重新加载.bash_profile命令设置别名，您可以将以下命令添加到Bash文件中：
1alias bashs=&amp;#34;source ~/.bash_profile&amp;#34; 这样，您下一次只需键入bashs即可重新加载.bash_profile文件。
如果.bash_profile文件不存在，您可以尝试运行以下命令来重新加载.bashrc文件：
1. ~/.bashrc 或者
1source ~/.bashrc 请注意，这将加载.bashrc文件而不是.bash_profile文件。您可以在这里找到有关bashrc文件的更多信息。
还有一种方法是通过以下方式重新加载最近编辑过的文件历史记录：
1. !$ 这将重新加载您刚刚在历史记录中编辑的文件。有关“bang dollar”在bash中的更多信息，请参阅这里。
如果您使用的是Debian系统，您可以简单地键入exec bash来实现重新加载.bash_profile文件。对于其他发行版，可能需要尝试其他方法。
如果您运行的是macOS v10.12（Sierra），并且使用其他方法后仍然无法重新加载.bash_profile文件，您可以尝试重新启动计算机，有时候需要进行硬重启。但是，请注意，这不是解决问题的最佳方法。
在某些情况下，通过重新加载.bash_profile可能不会在所有标签页/终端中生效。除了使用之前提到的命令外，您还可以使用以下方法在每个标签页中重新加载bash profile。
如果您使用iTerm，您可以使用CMD⌘+Shift+I将命令输入到所有当前标签页。对于终端，您可以参考这里。
如果您想要在bash文件中添加别名以便下次调用，可以使用以下命令：
1alias reload!=&amp;#34;. ~/.bash_profile&amp;#34; 或者，如果想要通过函数添加日志：
1function reload! () { 2 echo &amp;#34;Reloading bash profile...!&amp;#34; 3 source ~/.bash_profile 4 echo &amp;#34;Reloaded!!!&amp;#34; 5} 简单地输入. ~/.bash_profile即可重新加载文件。有关source命令的更多信息，请参阅这里。
如果您不介意丢失当前shell终端的历史记录，您还可以执行以下命令：
1bash -l 这将fork一个新的bash子进程，并以登录shell的形式运行。这是必需的，因为非登录shell不会运行.
          
          
        
      </description>
    </item>
    
    <item>
      <title>如何在C#中获取当前可执行文件名</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E5%9C%A8c#%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%90%8D/</link>
      <pubDate>Thu, 07 Sep 2023 22:35:51 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E5%9C%A8c#%E4%B8%AD%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%90%8D/</guid>
      <description>
        
          
            摘要 本教程将解答如何在C#中获取当前正在运行的程序的可执行文件名。通过提供示例代码和详细说明，你将学会如何实现这一操作。
内容 要获取当前正在运行的程序的可执行文件名，你可以使用以下方法之一：
方法一：使用AppDomain
1System.AppDomain.CurrentDomain.FriendlyName 方法二：使用Assembly
1System.Reflection.Assembly.GetExecutingAssembly().Location 方法三：使用Process
1System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName 这个方法会返回你当前运行的程序的可执行文件名。
下面是一个示例的控制台应用程序：
1using System; 2 3class Program 4{ 5 static void Main(string[] args) 6 { 7 string executableName = System.AppDomain.CurrentDomain.FriendlyName; 8 Console.WriteLine(executableName); 9 Console.ReadLine(); 10 } 11} 在这个示例中，我们使用System.AppDomain.CurrentDomain.FriendlyName来获取当前程序的可执行文件名，并将其打印输出。
总结 通过使用AppDomain、Assembly或Process，你可以获取当前正在运行的程序的可执行文件名。根据实际需求选择合适的方法即可。感谢阅读本教程！
注意：根据你的情况，你可能需要根据实际需求和代码进行适当的调整。
          
          
        
      </description>
    </item>
    
    <item>
      <title>在命令行中对 diff 进行着色</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E5%AF%B9-diff-%E8%BF%9B%E8%A1%8C%E7%9D%80%E8%89%B2/</link>
      <pubDate>Thu, 07 Sep 2023 17:00:01 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%AD%E5%AF%B9-diff-%E8%BF%9B%E8%A1%8C%E7%9D%80%E8%89%B2/</guid>
      <description>
        
          
            摘要 本教程将向你展示如何对 diff 进行着色，以便在命令行中更好地显示。通过为 diff 添加颜色，可以增加可读性和易用性。
内容 当你需要比较两个文件的差异时，你可以使用 diff 命令。然而，默认情况下，diff 的输出通常是以纯文本的形式显示的，不易阅读。为了改善这种情况，我们可以通过为 diff 添加颜色，使其在命令行中以更好的方式呈现。
下面是几种在命令行中对 diff 进行着色的方法：
1. 使用 colordiff 命令 colordiff 是 diff 的一个包装器，它以与 diff 相同的格式显示输出，但使用彩色语法高亮增加可读性。你可以通过以下命令安装 colordiff：
1sudo apt-get install colordiff 安装后，你可以使用以下命令显示着色的 diff：
1diff file_a file_b | colordiff 或者：
1colordiff file_a file_b 2. 使用 Vim 或 VimDiff Vim 是一个功能强大的文本编辑器，可以用于显示 diff 的差异。你可以使用以下命令来显示差异：
1diff file_a file_b | vim -R - 或者使用 VimDiff（也可以使用 &#39;vim -d&#39; 来代替）以并排显示两个文件的差异：
1vimdiff file_a file_b 3. 使用 grc 命令 grc（Generic Colouriser）是一个通用的颜色着色工具，可以为多个命令的输出添加颜色，包括 diff。grc 是一个 Python 脚本，可以包装任何命令。所以，你可以使用以下命令来显示着色的 diff：
          
          
        
      </description>
    </item>
    
    <item>
      <title>在 Windows 上替代 cat 命令的方法</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8-windows-%E4%B8%8A%E6%9B%BF%E4%BB%A3-cat-%E5%91%BD%E4%BB%A4%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 05 Sep 2023 22:49:31 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8-windows-%E4%B8%8A%E6%9B%BF%E4%BB%A3-cat-%E5%91%BD%E4%BB%A4%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>
        
          
            摘要 本教程将介绍在 Windows 上替代 cat 命令的方法。我们将分享多种解决方案和命令，以实现对二进制文件的合并。
内容 在 Windows 上，可以使用以下命令来替代 cat 命令：
使用 type 命令：Windows 的 type 命令与 UNIX 的 cat 命令类似。
例子 1：
1type file1 file2 &amp;gt; file3 等价于 UNIX 的：
1cat file1 file2 &amp;gt; file3 例子 2：
1type *.vcf &amp;gt; all_in_one.vcf 该命令将合并所有的 vcard 文件为一个文件。
使用 copy 命令：可以使用 copy /b 命令来实现文件的合并。
1copy /b file1+file2 destfile 总结 在 Windows 上，可以使用 type 命令或 copy /b 命令来替代 cat 命令，实现对文件的合并操作。
相关链接 Windows 类型命令文档 Windows 复制命令文档 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

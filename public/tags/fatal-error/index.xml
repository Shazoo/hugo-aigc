<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fatal-error on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/fatal-error/</link>
    <description>Recent content in fatal-error on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Thu, 07 Sep 2023 10:34:54 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/fatal-error/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何捕获PHP致命错误（E_ERROR）</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7php%E8%87%B4%E5%91%BD%E9%94%99%E8%AF%AFe_error/</link>
      <pubDate>Thu, 07 Sep 2023 10:34:54 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7php%E8%87%B4%E5%91%BD%E9%94%99%E8%AF%AFe_error/</guid>
      <description>
        
          
            摘要 本教程将介绍如何捕获PHP中的致命错误（E_ERROR）。我们通常无法从致命错误中恢复，但是可以通过一些方法来记录和报告这些错误，以便进行适当的处理。
内容 在PHP中，致命错误（E_ERROR）往往是无法恢复的错误。由于这些错误可能会导致严重的问题，我们不能使用常规的方式来捕获和恢复。然而，在处理过程中，我们可以进行一些相应的操作来记录和报告这些错误。
预设情况下，PHP会将致命错误打印到服务器的错误日志中。如果使用的是共享主机，您可能无法直接访问这些日志文件。在这种情况下，您可以尝试以下方法来捕获和处理致命错误。
使用错误处理函数来捕获致命错误 可以使用错误处理函数 set_error_handler() 来捕获大多数PHP错误，但是这个函数对致命错误（E_ERROR）无效。因此，我们需要另一种方式来捕获这些错误。
PHP提供了一个称为 register_shutdown_function() 的函数，可以在PHP脚本结束时执行一段代码。我们可以通过在该函数中调用 error_get_last() 函数，来获取最后产生的错误信息。如果最后产生的错误是致命错误，我们可以根据需要进行相应的处理。
以下是一个示例代码：
1register_shutdown_function(&amp;#39;handle_shutdown&amp;#39;); 2 3function handle_shutdown() { 4 $error = error_get_last(); 5 if ($error !== null &amp;amp;&amp;amp; $error[&amp;#39;type&amp;#39;] === E_ERROR) { 6 // 进行相应的处理，比如记录错误、发送邮件等 7 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/android/</link>
    <description>Recent content in android on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Thu, 07 Sep 2023 08:31:24 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何更新RecyclerView Adapter数据</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0recyclerview-adapter%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 07 Sep 2023 08:31:24 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0recyclerview-adapter%E6%95%B0%E6%8D%AE/</guid>
      <description>
        
          
            摘要： 本文介绍了如何更新RecyclerView Adapter的数据。提供了多种方法来更新Adapter的数据集，并给出了示例代码。
内容： 当需要更新RecyclerView的数据时，有多种方法可供选择。下面列举了几种常见的更新方法：
直接更新数据集，然后调用notifyDataSetChanged()方法，通知Adapter数据发生变化。 1adapter.setData(newData); 2adapter.notifyDataSetChanged(); 使用DiffUtil类进行数据差异计算，然后将计算结果应用到Adapter中。 1DiffUtil.DiffResult diffResult = DiffUtil.calculateDiff(new DiffUtilCallback(oldData, newData)); 2adapter.setData(newData); 3diffResult.dispatchUpdatesTo(adapter); 使用AsyncListDiffer类进行异步数据差异计算。 1AsyncListDiffer&amp;lt;T&amp;gt; differ = new AsyncListDiffer&amp;lt;&amp;gt;(adapter, diffCallback); 2differ.submitList(newData); 在使用AsyncListDiffer时，需要提供一个DiffUtil.ItemCallback来比较新旧数据集中的数据差异，并使用submitList()方法提交新的数据集。AsyncListDiffer将自动计算差异并分发更新事件给Adapter。
总结： 更新RecyclerView Adapter的数据，可以直接更新数据集并调用notifyDataSetChanged()方法，也可以使用DiffUtil类或AsyncListDiffer类来计算数据差异并将差异应用到Adapter中。根据实际需求选择合适的方法来更新数据，并确保调用相应的刷新方法，以便在用户界面上正确显示更新后的数据。
          
          
        
      </description>
    </item>
    
    <item>
      <title>在Android中如何使用`setCompoundDrawables()`显示组合Drawable</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8android%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8setcompounddrawables%E6%98%BE%E7%A4%BA%E7%BB%84%E5%90%88drawable/</link>
      <pubDate>Wed, 06 Sep 2023 16:21:07 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8android%E4%B8%AD%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8setcompounddrawables%E6%98%BE%E7%A4%BA%E7%BB%84%E5%90%88drawable/</guid>
      <description>
        
          
            摘要 本教程将介绍如何在Android中使用setCompoundDrawables()方法显示组合Drawable。我们将提供几种不同的方法来实现这个目标，并提供代码示例。
内容 在Android中，我们可以通过几种不同的方法使用setCompoundDrawables()方法显示组合Drawable。下面是几种常用的方法：
方法一：使用setCompoundDrawables() 1Drawable myDrawable = getResources().getDrawable(R.drawable.btn); 2btn.setCompoundDrawables(myDrawable, null, null, null); 在这个例子中，我们使用getResources().getDrawable()方法获取Drawable对象，并使用setCompoundDrawables()方法将Drawable对象设置到指定的TextView上。
方法二：使用setBounds() 1Drawable myDrawable = getResources().getDrawable(R.drawable.btn); 2myDrawable.setBounds(0, 0, myDrawable.getIntrinsicWidth(), myDrawable.getIntrinsicHeight()); 3btn.setCompoundDrawables(myDrawable, null, null, null); 在这个例子中，我们使用getResources().getDrawable()方法获取Drawable对象，并使用setBounds()方法为Drawable对象设置边界。然后将Drawable对象设置到指定的TextView上。
这些方法可以帮助我们使用setCompoundDrawables()方法显示组合Drawable。根据具体需求选择合适的方法即可。
总结 在Android中，使用setCompoundDrawables()方法显示组合Drawable非常简单。通过获取Drawable对象并设置边界，然后将Drawable对象设置到相应的TextView上，我们可以轻松地实现组合Drawable的显示。选择合适的方法取决于具体的使用场景和需求。
          
          
        
      </description>
    </item>
    
    <item>
      <title>Android资源目录中是否可以包含子目录？</title>
      <link>https://www.techdocdb.com/posts/android%E8%B5%84%E6%BA%90%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E5%AD%90%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Tue, 29 Aug 2023 07:21:41 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/android%E8%B5%84%E6%BA%90%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%8C%85%E5%90%AB%E5%AD%90%E7%9B%AE%E5%BD%95/</guid>
      <description>
        
          
            摘要 本教程将介绍在Android项目的资源目录（res）中是否可以包含子目录。通过解释和示例代码，说明了资源目录的组
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

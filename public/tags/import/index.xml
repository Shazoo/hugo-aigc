<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>import on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/import/</link>
    <description>Recent content in import on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Sun, 10 Sep 2023 08:00:07 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/import/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>当应该使用大括号来导入ES6的import语句？</title>
      <link>https://www.techdocdb.com/posts/%E5%BD%93%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E5%A4%A7%E6%8B%AC%E5%8F%B7%E6%9D%A5%E5%AF%BC%E5%85%A5es6%E7%9A%84import%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sun, 10 Sep 2023 08:00:07 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%BD%93%E5%BA%94%E8%AF%A5%E4%BD%BF%E7%94%A8%E5%A4%A7%E6%8B%AC%E5%8F%B7%E6%9D%A5%E5%AF%BC%E5%85%A5es6%E7%9A%84import%E8%AF%AD%E5%8F%A5/</guid>
      <description>
        
          
            本教程将解释在ES6中使用大括号在导入语句中的使用时机。
摘要 ES6中的import关键字用于导入模块。使用大括号，我们可以选择性地导入模块的特定组件。不使用大括号时，默认将导入模块的默认导出。
内容 为了更好地理解何时在导入语句中使用大括号，我们将通过一个例子来说明。
例如，我们有一个名为initialState.js的文件，内容如下：
1var initialState = { 2 todo: { 3 todos: [ 4 {id: 1, task: &amp;#39;Finish Coding&amp;#39;, completed: false}, 5 {id: 2, task: &amp;#39;Do Laundry&amp;#39;, completed: false}, 6 {id: 2, task: &amp;#39;Shopping Groceries&amp;#39;, completed: false}, 7 ] 8 } 9}; 10 11export default initialState; 在TodoReducer.js文件中，我们需要导入此文件，而不使用大括号：
1import initialState from &amp;#39;./initialState&amp;#39;; 如果我们在大括号中包含initialState，则会出现以下错误：
1Cannot read property &amp;#39;todos&amp;#39; of undefined 其他一些文件中的组件也可能由于使用了大括号而出现类似的错误。那么我们什么时候应该使用大括号来导入单个模块呢？
大括号在以下两种情况下使用：
导入模块的特定组件 导入模块的默认导出，并为其指定名称 以下是两种情况的示例：
导入模块的特定组件 例如，我们有一个名为A.js的文件，其中包含了一个名为A的特定组件：
1export const A = 42; 我们可以使用以下语法导入该组件：
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

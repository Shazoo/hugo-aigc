<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oop on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/oop/</link>
    <description>Recent content in oop on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Tue, 12 Sep 2023 09:28:29 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/oop/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为什么要使用匿名命名空间，以及它们的好处</title>
      <link>https://www.techdocdb.com/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%BB%A5%E5%8F%8A%E5%AE%83%E4%BB%AC%E7%9A%84%E5%A5%BD%E5%A4%84/</link>
      <pubDate>Tue, 12 Sep 2023 09:28:29 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%BB%A5%E5%8F%8A%E5%AE%83%E4%BB%AC%E7%9A%84%E5%A5%BD%E5%A4%84/</guid>
      <description>
        
          
            概述 本教程将解答在C++项目中频繁使用匿名命名空间的设计考虑和好处。匿名命名空间提供了一种将标识符限定在翻译单元（.cpp文件及其所有的包含文件）内部的方法。我们将讨论匿名命名空间的设计原因以及使用它们的优势和劣势。
示例 以下是使用匿名命名空间的示例：
1// newusertype.cc 2namespace { 3 const int SIZE_OF_ARRAY_X; 4 const int SIZE_OF_ARRAY_Y; 5 bool getState(userType*,otherUserType*); 6} 7 8newusertype::newusertype(...) {... 示例中的匿名命名空间用于避免全局变量，并将变量、函数、类等限定在当前文件内。这样做的优点在于在链接时不会与其他文件中相同名称的标识符发生冲突。匿名命名空间的效果与为每个翻译单元选择唯一名称的命名空间相同。
总结 本教程解答了为什么会使用匿名命名空间以及它的好处。通过使用匿名命名空间，您可以将标识符限定在当前文件内部，避免命名冲突，并提供更好的代码封装性和可维护性。匿名命名空间可以作为替代静态关键字的方法，并可以用于在函数、类等上下文中实现翻译单元级的封装。
          
          
        
      </description>
    </item>
    
  </channel>
</rss>

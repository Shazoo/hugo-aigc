<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on 技术分享站</title>
    <link>https://www.techdocdb.com/tags/php/</link>
    <description>Recent content in php on 技术分享站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright>
    <lastBuildDate>Thu, 07 Sep 2023 11:27:58 +0800</lastBuildDate><atom:link href="https://www.techdocdb.com/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 PHP 脚本返回 JSON 数据</title>
      <link>https://www.techdocdb.com/posts/%E4%BD%BF%E7%94%A8-php-%E8%84%9A%E6%9C%AC%E8%BF%94%E5%9B%9E-json-%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 07 Sep 2023 11:27:58 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E4%BD%BF%E7%94%A8-php-%E8%84%9A%E6%9C%AC%E8%BF%94%E5%9B%9E-json-%E6%95%B0%E6%8D%AE/</guid>
      <description>
        
          
            摘要 本教程将介绍如何从 PHP 脚本中返回 JSON 数据。你需要了解如何设置 Content-Type 头部以及如何使用 echo 输出 JSON 数据。
内容 要返回 JSON 数据，你需要在脚本开始的地方设置 Content-Type 头部为 application/json：
1header(&amp;#39;Content-Type: application/json; charset=utf-8&amp;#39;); 然后，你可以使用 echo 输出经过 JSON 编码的数据：
1$data = /** 这里填入你要序列化的数据 **/; 2echo json_encode($data); 这样就可以将 PHP 数据序列化为 JSON 字符串并输出给客户端。
以下是一个完整的示例：
1$data = [ 2 &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;John Doe&amp;#39;, 3 &amp;#39;age&amp;#39; =&amp;gt; 25, 4 &amp;#39;email&amp;#39; =&amp;gt; &amp;#39;johndoe@example.com&amp;#39; 5]; 6 7header(&amp;#39;Content-Type: application/json; charset=utf-8&amp;#39;); 8echo json_encode($data); 这个示例将一个包含姓名、年龄和电子邮件的关联数组转换为 JSON 字符串并返回给客户端。
请注意，如果要返回 JSON 数据，最好设置 Content-Type 头部以确保客户端正确解析数据。同时，确保你要输出的数据已经通过 json_encode 进行了正确的 JSON 编码。
          
          
        
      </description>
    </item>
    
    <item>
      <title>如何捕获PHP致命错误（E_ERROR）</title>
      <link>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7php%E8%87%B4%E5%91%BD%E9%94%99%E8%AF%AFe_error/</link>
      <pubDate>Thu, 07 Sep 2023 10:34:54 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%A6%82%E4%BD%95%E6%8D%95%E8%8E%B7php%E8%87%B4%E5%91%BD%E9%94%99%E8%AF%AFe_error/</guid>
      <description>
        
          
            摘要 本教程将介绍如何捕获PHP中的致命错误（E_ERROR）。我们通常无法从致命错误中恢复，但是可以通过一些方法来记录和报告这些错误，以便进行适当的处理。
内容 在PHP中，致命错误（E_ERROR）往往是无法恢复的错误。由于这些错误可能会导致严重的问题，我们不能使用常规的方式来捕获和恢复。然而，在处理过程中，我们可以进行一些相应的操作来记录和报告这些错误。
预设情况下，PHP会将致命错误打印到服务器的错误日志中。如果使用的是共享主机，您可能无法直接访问这些日志文件。在这种情况下，您可以尝试以下方法来捕获和处理致命错误。
使用错误处理函数来捕获致命错误 可以使用错误处理函数 set_error_handler() 来捕获大多数PHP错误，但是这个函数对致命错误（E_ERROR）无效。因此，我们需要另一种方式来捕获这些错误。
PHP提供了一个称为 register_shutdown_function() 的函数，可以在PHP脚本结束时执行一段代码。我们可以通过在该函数中调用 error_get_last() 函数，来获取最后产生的错误信息。如果最后产生的错误是致命错误，我们可以根据需要进行相应的处理。
以下是一个示例代码：
1register_shutdown_function(&amp;#39;handle_shutdown&amp;#39;); 2 3function handle_shutdown() { 4 $error = error_get_last(); 5 if ($error !== null &amp;amp;&amp;amp; $error[&amp;#39;type&amp;#39;] === E_ERROR) { 6 // 进行相应的处理，比如记录错误、发送邮件等 7 
          
          
        
      </description>
    </item>
    
    <item>
      <title>在PHP中如何获取文件扩展名？</title>
      <link>https://www.techdocdb.com/posts/%E5%9C%A8php%E4%B8%AD%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D/</link>
      <pubDate>Mon, 28 Aug 2023 08:43:44 +0800</pubDate>
      
      <guid>https://www.techdocdb.com/posts/%E5%9C%A8php%E4%B8%AD%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D/</guid>
      <description>
        
          
            摘要 本教程将详细说明如何在PHP中获取文件的扩展名。我们将介绍使用不同的方法来获取扩展名，并提供示例代码。
内容 在PHP中，我们可以使用多种方法来获取文件的扩展名。
使用pathinfo函数 使用pathinfo函数可以直接获取文件的扩展名。以下是一个示例代码： 1$path = $_FILES[&amp;#39;image&amp;#39;][&amp;#39;name&amp;#39;]; 2$extension = pathinfo($path, PATHINFO_EXTENSION); 使用explode和end函数 使用explode函数将文件名拆分成一个数组，然后使用end函数获取数组的最后一个元素作为扩展名。以下是一个示例代码： 1$array = explode(&amp;#39;.&amp;#39;, $_FILES[&amp;#39;image&amp;#39;][&amp;#39;name&amp;#39;]); 2$extension = end($array); 使用substr和strrpos函数 使用substr函数和strrpos函数可以从文件名中截取出扩展名。以下是一个示例代码： 1$userfile_name = $_FILES[&amp;#39;image&amp;#39;][&amp;#39;name&amp;#39;]; 2$extension = substr($userfile_name, strrpos($userfile_name, &amp;#39;.&amp;#39;) + 1); 总结 在PHP中获取文件的扩展名有多种方法，包括使用pathinfo函数、explode和end函数以及substr和strrpos函数。根据具体情况，选择适合的方法即可。
参考链接 pathinfo函数文档 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
